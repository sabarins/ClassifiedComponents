import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { gql } from "@apollo/client";
import client from '../client';
import Format from './layout/Format'
import Section1 from './Components/section1'
import Browsectg from './Components/browsectg'
import Homecards from './Components/homecards'


// importing all categories cards as a component
import AllCtegoriescards from './Components/AllCtegoriescards';

//import category component
import Categories from './Categories';
import Header from './Components/Header';


export default function Home({ jobsdata,jobsfeatures,automobilesdata,servicesdata }) {
  console.log(automobilesdata);
  return (
    <div className={styles.container}>

     <Format>
     <Section1></Section1>
     <Browsectg></Browsectg>  
     <div className='displayallcards'>
        <AllCtegoriescards alljobsdata = {jobsdata} jobfeature = {jobsfeatures} amdata={automobilesdata} servicedata={servicesdata}/>
      </div>    
      </Format>
      {/* <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" />
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
      </Head> */}
     {/* <div style={{textAlign:"right"}}>
      <Header />
     </div> */}

      {/* <div>
        <Categories />
      </div> */}

      {/* <div className='displayallcards'>
        <AllCtegoriescards allcategorydata = {jobsdata} amdata={automobilesdata} servicedata={servicesdata}/>
      </div> */}

    </div>
  )
}

export async function getStaticProps() {
  const { data } = await client.query({
    query: gql`
      query NewQuery {
        allJobs {
          nodes {
            jobfeatures {
              address
              alternateContanctNumber
              city
              contactNumber
              description
              jobPosition
              location
              salaryFrom
              salaryTo
            }
            title
            uri
            date
          }
        }
        allAutomob {
          nodes {
            categories {
              nodes {
                name
              }
            }
            automobfeatures {
              address
              alternateContactNumber
              contactNumber
              description
              location
            }
            uri
            date
            title
          }
        }
        allService {
          nodes {
            servicefeatures {
              address
              contactNumber
              description
              location
              price
              sqft
              alternateContactNumber
              fieldGroupName
            }
            title
            uri
          }
        }
      }
      `
  });
  console.log("h",data.allAutomob,"d",data.allService);
  return {
    props: {
      jobsdata: data.allJobs.nodes,
      jobsfeatures: data.allJobs.nodes.jobfeatures || null,
      automobilesdata: data.allAutomob.nodes,
      servicesdata: data.allService.nodes,
    }
  }

}
