import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { gql } from "@apollo/client";
import client from '../client';

// importing all categories cards as a component
import AllCtegoriescards from './Components/AllCtegoriescards';

//import category component
import Categories from './Categories';
import Header from './Components/Header';


export default function Home({ jobsdata,automobilesdata,servicesdata }) {
  console.log(jobsdata.allJobs.nodes);
  console.log(automobilesdata);
  const str = jobsdata.allJobs.nodes;
  console.log(str);
  return (
    <div className={styles.container}>
      {/* <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" />
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
      </Head> */}
     <div style={{textAlign:"right"}}>
      <Header />
     </div>

      <div>
        <Categories />
      </div>

      <div className='displayallcards'>
        <AllCtegoriescards allcategorydata = {jobsdata} amdata={automobilesdata} servicedata={servicesdata}/>
      </div>

    </div>
  )
}

export async function getStaticProps() {
  const { data } = await client.query({
    query: gql`
      query NewQuery {
        allJobs {
          nodes {
            jobsFeatures {
              address
              alternateContactNumber
              computerClass
              contactNumber
              courseDetails
              delivery
              distributorsWanted
              driver
              fieldGroupName
              homeCare
              itCandidates
              listOfPosition
              location
              qualification
              salesMarketing
              tailorCourse
              tailoringVacancy
            }
            title
            jobsId
            date
            blocksJSON
            uri
          }
        }
        allAutomobiles {
          nodes {
            title
            uri
            date
          }
        }
        allService {
          nodes {
            date
            title
            uri
            serviceFeatures {
              fieldGroupName
            }
          }
        }
      }
      `
  });
  console.log("h",data.allAutomobiles,"d",data.allService);
  return {
    props: {
      jobsdata: data,
      automobilesdata: data.allAutomobiles,
      servicesdata: data.allService,
    }
  }

}
